// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a LaunchDarkly segment data source.
 *
 * This data source allows you to retrieve segment information from your LaunchDarkly organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as launchdarkly from "@pulumi/launchdarkly";
 *
 * const example = pulumi.output(launchdarkly.getSegment({
 *     envKey: "example-env",
 *     key: "example-segment",
 *     projectKey: "example-project",
 * }));
 * ```
 */
export function getSegment(args: GetSegmentArgs, opts?: pulumi.InvokeOptions): Promise<GetSegmentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("launchdarkly:index/getSegment:getSegment", {
        "description": args.description,
        "envKey": args.envKey,
        "excludeds": args.excludeds,
        "includeds": args.includeds,
        "key": args.key,
        "projectKey": args.projectKey,
        "rules": args.rules,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSegment.
 */
export interface GetSegmentArgs {
    /**
     * The description of the segment's purpose.
     */
    description?: string;
    /**
     * The segment's environment key.
     */
    envKey: string;
    /**
     * List of user keys excluded from the segment.
     */
    excludeds?: string[];
    /**
     * List of user keys included in the segment.
     */
    includeds?: string[];
    /**
     * The unique key that references the segment.
     */
    key: string;
    /**
     * The segment's project key.
     */
    projectKey: string;
    /**
     * List of nested custom rule blocks to apply to the segment. To learn more, read Nested Rules Blocks.
     */
    rules?: inputs.GetSegmentRule[];
    /**
     * Set of tags for the segment.
     */
    tags?: string[];
}

/**
 * A collection of values returned by getSegment.
 */
export interface GetSegmentResult {
    /**
     * The segment's creation date represented as a UNIX epoch timestamp.
     */
    readonly creationDate: number;
    /**
     * The description of the segment's purpose.
     */
    readonly description?: string;
    readonly envKey: string;
    /**
     * List of user keys excluded from the segment.
     */
    readonly excludeds?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of user keys included in the segment.
     */
    readonly includeds?: string[];
    readonly key: string;
    /**
     * The human-friendly name for the segment.
     */
    readonly name: string;
    readonly projectKey: string;
    /**
     * List of nested custom rule blocks to apply to the segment. To learn more, read Nested Rules Blocks.
     */
    readonly rules?: outputs.GetSegmentRule[];
    /**
     * Set of tags for the segment.
     */
    readonly tags?: string[];
}

export function getSegmentOutput(args: GetSegmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSegmentResult> {
    return pulumi.output(args).apply(a => getSegment(a, opts))
}

/**
 * A collection of arguments for invoking getSegment.
 */
export interface GetSegmentOutputArgs {
    /**
     * The description of the segment's purpose.
     */
    description?: pulumi.Input<string>;
    /**
     * The segment's environment key.
     */
    envKey: pulumi.Input<string>;
    /**
     * List of user keys excluded from the segment.
     */
    excludeds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of user keys included in the segment.
     */
    includeds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique key that references the segment.
     */
    key: pulumi.Input<string>;
    /**
     * The segment's project key.
     */
    projectKey: pulumi.Input<string>;
    /**
     * List of nested custom rule blocks to apply to the segment. To learn more, read Nested Rules Blocks.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.GetSegmentRuleArgs>[]>;
    /**
     * Set of tags for the segment.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
