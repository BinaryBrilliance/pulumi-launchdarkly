// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectEnvironmentApprovalSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectEnvironmentApprovalSettingArgs Empty = new ProjectEnvironmentApprovalSettingArgs();

    /**
     * Set to `true` if changes can be applied as long as the `min_num_approvals` is met, regardless of whether any reviewers have declined a request. Defaults to `true`.
     * 
     */
    @Import(name="canApplyDeclinedChanges")
    private @Nullable Output<Boolean> canApplyDeclinedChanges;

    /**
     * @return Set to `true` if changes can be applied as long as the `min_num_approvals` is met, regardless of whether any reviewers have declined a request. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> canApplyDeclinedChanges() {
        return Optional.ofNullable(this.canApplyDeclinedChanges);
    }

    /**
     * Set to `true` if requesters can approve or decline their own request. They may always comment. Defaults to `false`.
     * 
     */
    @Import(name="canReviewOwnRequest")
    private @Nullable Output<Boolean> canReviewOwnRequest;

    /**
     * @return Set to `true` if requesters can approve or decline their own request. They may always comment. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> canReviewOwnRequest() {
        return Optional.ofNullable(this.canReviewOwnRequest);
    }

    /**
     * The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
     * 
     */
    @Import(name="minNumApprovals")
    private @Nullable Output<Integer> minNumApprovals;

    /**
     * @return The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
     * 
     */
    public Optional<Output<Integer>> minNumApprovals() {
        return Optional.ofNullable(this.minNumApprovals);
    }

    /**
     * Set to `true` for changes to flags in this environment to require approval. You may only set `required` to true if `required_approval_tags` is not set and vice versa. Defaults to `false`.
     * 
     */
    @Import(name="required")
    private @Nullable Output<Boolean> required;

    /**
     * @return Set to `true` for changes to flags in this environment to require approval. You may only set `required` to true if `required_approval_tags` is not set and vice versa. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> required() {
        return Optional.ofNullable(this.required);
    }

    /**
     * An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is not set to `true` and vice versa.
     * 
     */
    @Import(name="requiredApprovalTags")
    private @Nullable Output<List<String>> requiredApprovalTags;

    /**
     * @return An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is not set to `true` and vice versa.
     * 
     */
    public Optional<Output<List<String>>> requiredApprovalTags() {
        return Optional.ofNullable(this.requiredApprovalTags);
    }

    private ProjectEnvironmentApprovalSettingArgs() {}

    private ProjectEnvironmentApprovalSettingArgs(ProjectEnvironmentApprovalSettingArgs $) {
        this.canApplyDeclinedChanges = $.canApplyDeclinedChanges;
        this.canReviewOwnRequest = $.canReviewOwnRequest;
        this.minNumApprovals = $.minNumApprovals;
        this.required = $.required;
        this.requiredApprovalTags = $.requiredApprovalTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectEnvironmentApprovalSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectEnvironmentApprovalSettingArgs $;

        public Builder() {
            $ = new ProjectEnvironmentApprovalSettingArgs();
        }

        public Builder(ProjectEnvironmentApprovalSettingArgs defaults) {
            $ = new ProjectEnvironmentApprovalSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param canApplyDeclinedChanges Set to `true` if changes can be applied as long as the `min_num_approvals` is met, regardless of whether any reviewers have declined a request. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder canApplyDeclinedChanges(@Nullable Output<Boolean> canApplyDeclinedChanges) {
            $.canApplyDeclinedChanges = canApplyDeclinedChanges;
            return this;
        }

        /**
         * @param canApplyDeclinedChanges Set to `true` if changes can be applied as long as the `min_num_approvals` is met, regardless of whether any reviewers have declined a request. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder canApplyDeclinedChanges(Boolean canApplyDeclinedChanges) {
            return canApplyDeclinedChanges(Output.of(canApplyDeclinedChanges));
        }

        /**
         * @param canReviewOwnRequest Set to `true` if requesters can approve or decline their own request. They may always comment. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder canReviewOwnRequest(@Nullable Output<Boolean> canReviewOwnRequest) {
            $.canReviewOwnRequest = canReviewOwnRequest;
            return this;
        }

        /**
         * @param canReviewOwnRequest Set to `true` if requesters can approve or decline their own request. They may always comment. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder canReviewOwnRequest(Boolean canReviewOwnRequest) {
            return canReviewOwnRequest(Output.of(canReviewOwnRequest));
        }

        /**
         * @param minNumApprovals The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
         * 
         * @return builder
         * 
         */
        public Builder minNumApprovals(@Nullable Output<Integer> minNumApprovals) {
            $.minNumApprovals = minNumApprovals;
            return this;
        }

        /**
         * @param minNumApprovals The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
         * 
         * @return builder
         * 
         */
        public Builder minNumApprovals(Integer minNumApprovals) {
            return minNumApprovals(Output.of(minNumApprovals));
        }

        /**
         * @param required Set to `true` for changes to flags in this environment to require approval. You may only set `required` to true if `required_approval_tags` is not set and vice versa. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder required(@Nullable Output<Boolean> required) {
            $.required = required;
            return this;
        }

        /**
         * @param required Set to `true` for changes to flags in this environment to require approval. You may only set `required` to true if `required_approval_tags` is not set and vice versa. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder required(Boolean required) {
            return required(Output.of(required));
        }

        /**
         * @param requiredApprovalTags An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is not set to `true` and vice versa.
         * 
         * @return builder
         * 
         */
        public Builder requiredApprovalTags(@Nullable Output<List<String>> requiredApprovalTags) {
            $.requiredApprovalTags = requiredApprovalTags;
            return this;
        }

        /**
         * @param requiredApprovalTags An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is not set to `true` and vice versa.
         * 
         * @return builder
         * 
         */
        public Builder requiredApprovalTags(List<String> requiredApprovalTags) {
            return requiredApprovalTags(Output.of(requiredApprovalTags));
        }

        /**
         * @param requiredApprovalTags An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is not set to `true` and vice versa.
         * 
         * @return builder
         * 
         */
        public Builder requiredApprovalTags(String... requiredApprovalTags) {
            return requiredApprovalTags(List.of(requiredApprovalTags));
        }

        public ProjectEnvironmentApprovalSettingArgs build() {
            return $;
        }
    }

}
