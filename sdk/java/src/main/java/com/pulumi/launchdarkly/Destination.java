// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.launchdarkly.DestinationArgs;
import com.pulumi.launchdarkly.Utilities;
import com.pulumi.launchdarkly.inputs.DestinationState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a LaunchDarkly Data Export Destination resource.
 * 
 * Data Export Destinations are locations that receive exported data. This resource allows you to configure destinations for the export of raw analytics data, including feature flag requests, analytics events, custom events, and more.
 * 
 * To learn more about data export, read [Data Export Documentation](https://docs.launchdarkly.com/integrations/data-export).
 * 
 * ## Example Usage
 * 
 * Currently the following five types of destinations are available: kinesis, google-pubsub, mparticle, azure-event-hubs, and segment. Please note that config fields will vary depending on which destination you are trying to configure / access.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.launchdarkly.Destination;
 * import com.pulumi.launchdarkly.DestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Destination(&#34;example&#34;, DestinationArgs.builder()        
 *             .projectKey(&#34;example-project&#34;)
 *             .envKey(&#34;example-env&#34;)
 *             .kind(&#34;kinesis&#34;)
 *             .config(Map.ofEntries(
 *                 Map.entry(&#34;region&#34;, &#34;us-east-1&#34;),
 *                 Map.entry(&#34;role_arn&#34;, &#34;arn:aws:iam::123456789012:role/marketingadmin&#34;),
 *                 Map.entry(&#34;stream_name&#34;, &#34;cat-stream&#34;)
 *             ))
 *             .on(true)
 *             .tags(&#34;terraform&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.launchdarkly.Destination;
 * import com.pulumi.launchdarkly.DestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Destination(&#34;example&#34;, DestinationArgs.builder()        
 *             .projectKey(&#34;example-project&#34;)
 *             .envKey(&#34;example-env&#34;)
 *             .kind(&#34;google-pubsub&#34;)
 *             .config(Map.ofEntries(
 *                 Map.entry(&#34;project&#34;, &#34;example-pub-sub-project&#34;),
 *                 Map.entry(&#34;topic&#34;, &#34;example-topic&#34;)
 *             ))
 *             .on(true)
 *             .tags(&#34;terraform&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.launchdarkly.Destination;
 * import com.pulumi.launchdarkly.DestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Destination(&#34;example&#34;, DestinationArgs.builder()        
 *             .projectKey(&#34;example-project&#34;)
 *             .envKey(&#34;example-env&#34;)
 *             .kind(&#34;mparticle&#34;)
 *             .config(Map.ofEntries(
 *                 Map.entry(&#34;api_key&#34;, &#34;apiKeyfromMParticle&#34;),
 *                 Map.entry(&#34;secret&#34;, &#34;mParticleSecret&#34;),
 *                 Map.entry(&#34;user_identity&#34;, &#34;customer_id&#34;),
 *                 Map.entry(&#34;environment&#34;, &#34;production&#34;)
 *             ))
 *             .on(true)
 *             .tags(&#34;terraform&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.launchdarkly.Destination;
 * import com.pulumi.launchdarkly.DestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Destination(&#34;example&#34;, DestinationArgs.builder()        
 *             .config(Map.ofEntries(
 *                 Map.entry(&#34;name&#34;, &#34;example-azure-name&#34;),
 *                 Map.entry(&#34;namespace&#34;, &#34;example-azure-namespace&#34;),
 *                 Map.entry(&#34;policy_key&#34;, &#34;azure-event-hubs-policy-key&#34;),
 *                 Map.entry(&#34;policy_name&#34;, &#34;example-policy-name&#34;)
 *             ))
 *             .envKey(&#34;example-env&#34;)
 *             .kind(&#34;azure-event-hubs&#34;)
 *             .on(true)
 *             .projectKey(&#34;example-project&#34;)
 *             .tags(&#34;terraform&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.launchdarkly.Destination;
 * import com.pulumi.launchdarkly.DestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Destination(&#34;example&#34;, DestinationArgs.builder()        
 *             .projectKey(&#34;example-project&#34;)
 *             .envKey(&#34;example-env&#34;)
 *             .kind(&#34;segment&#34;)
 *             .config(Map.of(&#34;write_key&#34;, &#34;segment-write-key&#34;))
 *             .on(true)
 *             .tags(&#34;terraform&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * You can import a data export destination using the destination&#39;s full ID in the format `project_key/environment_key/id`. For example
 * 
 * ```sh
 *  $ pulumi import launchdarkly:index/destination:Destination example example-project/example-env/57c0af609969090743529967
 * ```
 * 
 */
@ResourceType(type="launchdarkly:index/destination:Destination")
public class Destination extends com.pulumi.resources.CustomResource {
    /**
     * - The destination-specific configuration. To learn more, read Destination-Specific Configs.
     * 
     */
    @Export(name="config", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> config;

    /**
     * @return - The destination-specific configuration. To learn more, read Destination-Specific Configs.
     * 
     */
    public Output<Map<String,String>> config() {
        return this.config;
    }
    /**
     * - The environment key.
     * 
     */
    @Export(name="envKey", type=String.class, parameters={})
    private Output<String> envKey;

    /**
     * @return - The environment key.
     * 
     */
    public Output<String> envKey() {
        return this.envKey;
    }
    /**
     * - The data export destination type. Available choices are `kinesis`, `google-pubsub`, `mparticle`, `azure-event-hubs`, and `segment`.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return - The data export destination type. Available choices are `kinesis`, `google-pubsub`, `mparticle`, `azure-event-hubs`, and `segment`.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * - 
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return -
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * - Whether the data export destination is on or not.
     * 
     */
    @Export(name="on", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> on;

    /**
     * @return - Whether the data export destination is on or not.
     * 
     */
    public Output<Optional<Boolean>> on() {
        return Codegen.optional(this.on);
    }
    /**
     * - The LaunchDarkly project key.
     * 
     */
    @Export(name="projectKey", type=String.class, parameters={})
    private Output<String> projectKey;

    /**
     * @return - The LaunchDarkly project key.
     * 
     */
    public Output<String> projectKey() {
        return this.projectKey;
    }
    /**
     * Tags associated with your resource
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags associated with your resource
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Destination(String name) {
        this(name, DestinationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Destination(String name, DestinationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Destination(String name, DestinationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("launchdarkly:index/destination:Destination", name, args == null ? DestinationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Destination(String name, Output<String> id, @Nullable DestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("launchdarkly:index/destination:Destination", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Destination get(String name, Output<String> id, @Nullable DestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Destination(name, id, state, options);
    }
}
