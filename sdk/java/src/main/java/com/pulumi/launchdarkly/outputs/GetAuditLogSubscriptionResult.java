// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.launchdarkly.outputs.GetAuditLogSubscriptionStatement;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuditLogSubscriptionResult {
    /**
     * @return A block of configuration fields associated with your integration type.
     * 
     */
    private @Nullable Map<String,Object> config;
    private String id;
    private String integrationKey;
    /**
     * @return The subscription&#39;s human-readable name.
     * 
     */
    private @Nullable String name;
    /**
     * @return Whether the subscription is enabled.
     * 
     */
    private @Nullable Boolean on;
    /**
     * @return The statement block used to filter subscription events. To learn more, read Statement Blocks.
     * 
     */
    private @Nullable List<GetAuditLogSubscriptionStatement> statements;
    /**
     * @return Set of tags associated with the subscription.
     * 
     */
    private @Nullable List<String> tags;

    private GetAuditLogSubscriptionResult() {}
    /**
     * @return A block of configuration fields associated with your integration type.
     * 
     */
    public Map<String,Object> config() {
        return this.config == null ? Map.of() : this.config;
    }
    public String id() {
        return this.id;
    }
    public String integrationKey() {
        return this.integrationKey;
    }
    /**
     * @return The subscription&#39;s human-readable name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Whether the subscription is enabled.
     * 
     */
    public Optional<Boolean> on() {
        return Optional.ofNullable(this.on);
    }
    /**
     * @return The statement block used to filter subscription events. To learn more, read Statement Blocks.
     * 
     */
    public List<GetAuditLogSubscriptionStatement> statements() {
        return this.statements == null ? List.of() : this.statements;
    }
    /**
     * @return Set of tags associated with the subscription.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditLogSubscriptionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> config;
        private String id;
        private String integrationKey;
        private @Nullable String name;
        private @Nullable Boolean on;
        private @Nullable List<GetAuditLogSubscriptionStatement> statements;
        private @Nullable List<String> tags;
        public Builder() {}
        public Builder(GetAuditLogSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.id = defaults.id;
    	      this.integrationKey = defaults.integrationKey;
    	      this.name = defaults.name;
    	      this.on = defaults.on;
    	      this.statements = defaults.statements;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder config(@Nullable Map<String,Object> config) {
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder integrationKey(String integrationKey) {
            this.integrationKey = Objects.requireNonNull(integrationKey);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder on(@Nullable Boolean on) {
            this.on = on;
            return this;
        }
        @CustomType.Setter
        public Builder statements(@Nullable List<GetAuditLogSubscriptionStatement> statements) {
            this.statements = statements;
            return this;
        }
        public Builder statements(GetAuditLogSubscriptionStatement... statements) {
            return statements(List.of(statements));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetAuditLogSubscriptionResult build() {
            final var o = new GetAuditLogSubscriptionResult();
            o.config = config;
            o.id = id;
            o.integrationKey = integrationKey;
            o.name = name;
            o.on = on;
            o.statements = statements;
            o.tags = tags;
            return o;
        }
    }
}
