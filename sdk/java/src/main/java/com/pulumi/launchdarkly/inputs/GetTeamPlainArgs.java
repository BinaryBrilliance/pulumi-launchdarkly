// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamPlainArgs Empty = new GetTeamPlainArgs();

    /**
     * The list of the keys of the custom roles that you have assigned to the team.
     * 
     */
    @Import(name="customRoleKeys")
    private @Nullable List<String> customRoleKeys;

    /**
     * @return The list of the keys of the custom roles that you have assigned to the team.
     * 
     */
    public Optional<List<String>> customRoleKeys() {
        return Optional.ofNullable(this.customRoleKeys);
    }

    /**
     * The team description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The team description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The team key.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return The team key.
     * 
     */
    public String key() {
        return this.key;
    }

    /**
     * Human readable name for the team.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Human readable name for the team.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetTeamPlainArgs() {}

    private GetTeamPlainArgs(GetTeamPlainArgs $) {
        this.customRoleKeys = $.customRoleKeys;
        this.description = $.description;
        this.key = $.key;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamPlainArgs $;

        public Builder() {
            $ = new GetTeamPlainArgs();
        }

        public Builder(GetTeamPlainArgs defaults) {
            $ = new GetTeamPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customRoleKeys The list of the keys of the custom roles that you have assigned to the team.
         * 
         * @return builder
         * 
         */
        public Builder customRoleKeys(@Nullable List<String> customRoleKeys) {
            $.customRoleKeys = customRoleKeys;
            return this;
        }

        /**
         * @param customRoleKeys The list of the keys of the custom roles that you have assigned to the team.
         * 
         * @return builder
         * 
         */
        public Builder customRoleKeys(String... customRoleKeys) {
            return customRoleKeys(List.of(customRoleKeys));
        }

        /**
         * @param description The team description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param key The team key.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        /**
         * @param name Human readable name for the team.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetTeamPlainArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            return $;
        }
    }

}
