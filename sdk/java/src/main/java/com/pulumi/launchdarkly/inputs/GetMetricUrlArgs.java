// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMetricUrlArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetMetricUrlArgs Empty = new GetMetricUrlArgs();

    /**
     * The metric type. Available choices are `click`, `custom`, and `pageview`.
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return The metric type. Available choices are `click`, `custom`, and `pageview`.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    @Import(name="substring")
    private @Nullable Output<String> substring;

    public Optional<Output<String>> substring() {
        return Optional.ofNullable(this.substring);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private GetMetricUrlArgs() {}

    private GetMetricUrlArgs(GetMetricUrlArgs $) {
        this.kind = $.kind;
        this.pattern = $.pattern;
        this.substring = $.substring;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMetricUrlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMetricUrlArgs $;

        public Builder() {
            $ = new GetMetricUrlArgs();
        }

        public Builder(GetMetricUrlArgs defaults) {
            $ = new GetMetricUrlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind The metric type. Available choices are `click`, `custom`, and `pageview`.
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The metric type. Available choices are `click`, `custom`, and `pageview`.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public Builder substring(@Nullable Output<String> substring) {
            $.substring = substring;
            return this;
        }

        public Builder substring(String substring) {
            return substring(Output.of(substring));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public GetMetricUrlArgs build() {
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            return $;
        }
    }

}
