// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.launchdarkly.inputs.GetFeatureFlagEnvironmentRuleClause;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFeatureFlagEnvironmentRule extends com.pulumi.resources.InvokeArgs {

    public static final GetFeatureFlagEnvironmentRule Empty = new GetFeatureFlagEnvironmentRule();

    /**
     * Group percentage rollout by a custom attribute.
     * 
     */
    @Import(name="bucketBy")
    private @Nullable String bucketBy;

    /**
     * @return Group percentage rollout by a custom attribute.
     * 
     */
    public Optional<String> bucketBy() {
        return Optional.ofNullable(this.bucketBy);
    }

    /**
     * List of nested blocks specifying the logical clauses evaluated. To learn more, read Nested Clauses Blocks.
     * 
     */
    @Import(name="clauses")
    private @Nullable List<GetFeatureFlagEnvironmentRuleClause> clauses;

    /**
     * @return List of nested blocks specifying the logical clauses evaluated. To learn more, read Nested Clauses Blocks.
     * 
     */
    public Optional<List<GetFeatureFlagEnvironmentRuleClause>> clauses() {
        return Optional.ofNullable(this.clauses);
    }

    /**
     * List of integer percentage rollout weights applied to each variation when the rule clauses evaluates to `true`.
     * 
     */
    @Import(name="rolloutWeights")
    private @Nullable List<Integer> rolloutWeights;

    /**
     * @return List of integer percentage rollout weights applied to each variation when the rule clauses evaluates to `true`.
     * 
     */
    public Optional<List<Integer>> rolloutWeights() {
        return Optional.ofNullable(this.rolloutWeights);
    }

    /**
     * The integer variation index served when the rule clauses evaluate to `true`.
     * 
     */
    @Import(name="variation")
    private @Nullable Integer variation;

    /**
     * @return The integer variation index served when the rule clauses evaluate to `true`.
     * 
     */
    public Optional<Integer> variation() {
        return Optional.ofNullable(this.variation);
    }

    private GetFeatureFlagEnvironmentRule() {}

    private GetFeatureFlagEnvironmentRule(GetFeatureFlagEnvironmentRule $) {
        this.bucketBy = $.bucketBy;
        this.clauses = $.clauses;
        this.rolloutWeights = $.rolloutWeights;
        this.variation = $.variation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFeatureFlagEnvironmentRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFeatureFlagEnvironmentRule $;

        public Builder() {
            $ = new GetFeatureFlagEnvironmentRule();
        }

        public Builder(GetFeatureFlagEnvironmentRule defaults) {
            $ = new GetFeatureFlagEnvironmentRule(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketBy Group percentage rollout by a custom attribute.
         * 
         * @return builder
         * 
         */
        public Builder bucketBy(@Nullable String bucketBy) {
            $.bucketBy = bucketBy;
            return this;
        }

        /**
         * @param clauses List of nested blocks specifying the logical clauses evaluated. To learn more, read Nested Clauses Blocks.
         * 
         * @return builder
         * 
         */
        public Builder clauses(@Nullable List<GetFeatureFlagEnvironmentRuleClause> clauses) {
            $.clauses = clauses;
            return this;
        }

        /**
         * @param clauses List of nested blocks specifying the logical clauses evaluated. To learn more, read Nested Clauses Blocks.
         * 
         * @return builder
         * 
         */
        public Builder clauses(GetFeatureFlagEnvironmentRuleClause... clauses) {
            return clauses(List.of(clauses));
        }

        /**
         * @param rolloutWeights List of integer percentage rollout weights applied to each variation when the rule clauses evaluates to `true`.
         * 
         * @return builder
         * 
         */
        public Builder rolloutWeights(@Nullable List<Integer> rolloutWeights) {
            $.rolloutWeights = rolloutWeights;
            return this;
        }

        /**
         * @param rolloutWeights List of integer percentage rollout weights applied to each variation when the rule clauses evaluates to `true`.
         * 
         * @return builder
         * 
         */
        public Builder rolloutWeights(Integer... rolloutWeights) {
            return rolloutWeights(List.of(rolloutWeights));
        }

        /**
         * @param variation The integer variation index served when the rule clauses evaluate to `true`.
         * 
         * @return builder
         * 
         */
        public Builder variation(@Nullable Integer variation) {
            $.variation = variation;
            return this;
        }

        public GetFeatureFlagEnvironmentRule build() {
            return $;
        }
    }

}
