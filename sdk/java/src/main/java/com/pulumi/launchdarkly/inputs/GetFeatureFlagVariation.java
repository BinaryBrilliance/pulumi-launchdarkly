// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFeatureFlagVariation extends com.pulumi.resources.InvokeArgs {

    public static final GetFeatureFlagVariation Empty = new GetFeatureFlagVariation();

    /**
     * The variation&#39;s description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The variation&#39;s description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the custom property.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the custom property.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The list of custom property value strings.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return The list of custom property value strings.
     * 
     */
    public String value() {
        return this.value;
    }

    private GetFeatureFlagVariation() {}

    private GetFeatureFlagVariation(GetFeatureFlagVariation $) {
        this.description = $.description;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFeatureFlagVariation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFeatureFlagVariation $;

        public Builder() {
            $ = new GetFeatureFlagVariation();
        }

        public Builder(GetFeatureFlagVariation defaults) {
            $ = new GetFeatureFlagVariation(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The variation&#39;s description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param name The name of the custom property.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param value The list of custom property value strings.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public GetFeatureFlagVariation build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
