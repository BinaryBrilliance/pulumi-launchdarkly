// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.launchdarkly.SegmentArgs;
import com.pulumi.launchdarkly.Utilities;
import com.pulumi.launchdarkly.inputs.SegmentState;
import com.pulumi.launchdarkly.outputs.SegmentRule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a LaunchDarkly segment resource.
 * 
 * This resource allows you to create and manage segments within your LaunchDarkly organization.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.launchdarkly.Segment;
 * import com.pulumi.launchdarkly.SegmentArgs;
 * import com.pulumi.launchdarkly.inputs.SegmentRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Segment(&#34;example&#34;, SegmentArgs.builder()        
 *             .key(&#34;example-segment-key&#34;)
 *             .projectKey(launchdarkly_project.example().key())
 *             .envKey(launchdarkly_environment.example().key())
 *             .description(&#34;This segment is managed by Terraform&#34;)
 *             .tags(            
 *                 &#34;segment-tag-1&#34;,
 *                 &#34;segment-tag-2&#34;)
 *             .includeds(            
 *                 &#34;user1&#34;,
 *                 &#34;user2&#34;)
 *             .excludeds(            
 *                 &#34;user3&#34;,
 *                 &#34;user4&#34;)
 *             .rules(SegmentRuleArgs.builder()
 *                 .clauses(SegmentRuleClauseArgs.builder()
 *                     .attribute(&#34;country&#34;)
 *                     .op(&#34;startsWith&#34;)
 *                     .values(                    
 *                         &#34;en&#34;,
 *                         &#34;de&#34;,
 *                         &#34;un&#34;)
 *                     .negate(false)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * LaunchDarkly segments can be imported using the segment&#39;s ID in the form `project_key/env_key/segment_key`, e.g.
 * 
 * ```sh
 *  $ pulumi import launchdarkly:index/segment:Segment example example-project/example-environment/example-segment-key
 * ```
 * 
 */
@ResourceType(type="launchdarkly:index/segment:Segment")
public class Segment extends com.pulumi.resources.CustomResource {
    /**
     * The segment&#39;s creation date represented as a UNIX epoch timestamp.
     * 
     */
    @Export(name="creationDate", type=Integer.class, parameters={})
    private Output<Integer> creationDate;

    /**
     * @return The segment&#39;s creation date represented as a UNIX epoch timestamp.
     * 
     */
    public Output<Integer> creationDate() {
        return this.creationDate;
    }
    /**
     * The description of the segment&#39;s purpose.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the segment&#39;s purpose.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The segment&#39;s environment key.
     * 
     */
    @Export(name="envKey", type=String.class, parameters={})
    private Output<String> envKey;

    /**
     * @return The segment&#39;s environment key.
     * 
     */
    public Output<String> envKey() {
        return this.envKey;
    }
    /**
     * List of user keys excluded from the segment.
     * 
     */
    @Export(name="excludeds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> excludeds;

    /**
     * @return List of user keys excluded from the segment.
     * 
     */
    public Output<Optional<List<String>>> excludeds() {
        return Codegen.optional(this.excludeds);
    }
    /**
     * List of user keys included in the segment.
     * 
     */
    @Export(name="includeds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> includeds;

    /**
     * @return List of user keys included in the segment.
     * 
     */
    public Output<Optional<List<String>>> includeds() {
        return Codegen.optional(this.includeds);
    }
    /**
     * The unique key that references the segment.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output<String> key;

    /**
     * @return The unique key that references the segment.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * The human-friendly name for the segment.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The human-friendly name for the segment.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The segment&#39;s project key.
     * 
     */
    @Export(name="projectKey", type=String.class, parameters={})
    private Output<String> projectKey;

    /**
     * @return The segment&#39;s project key.
     * 
     */
    public Output<String> projectKey() {
        return this.projectKey;
    }
    /**
     * List of nested custom rule blocks to apply to the segment. To learn more, read Nested Rules Blocks.
     * 
     */
    @Export(name="rules", type=List.class, parameters={SegmentRule.class})
    private Output</* @Nullable */ List<SegmentRule>> rules;

    /**
     * @return List of nested custom rule blocks to apply to the segment. To learn more, read Nested Rules Blocks.
     * 
     */
    public Output<Optional<List<SegmentRule>>> rules() {
        return Codegen.optional(this.rules);
    }
    /**
     * Set of tags for the segment.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Set of tags for the segment.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Segment(String name) {
        this(name, SegmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Segment(String name, SegmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Segment(String name, SegmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("launchdarkly:index/segment:Segment", name, args == null ? SegmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Segment(String name, Output<String> id, @Nullable SegmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("launchdarkly:index/segment:Segment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Segment get(String name, Output<String> id, @Nullable SegmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Segment(name, id, state, options);
    }
}
