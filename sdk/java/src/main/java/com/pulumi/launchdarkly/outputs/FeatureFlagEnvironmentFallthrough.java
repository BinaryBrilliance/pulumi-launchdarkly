// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FeatureFlagEnvironmentFallthrough {
    /**
     * @return Group percentage rollout by a custom attribute. This argument is only valid if `rollout_weights` is also specified.
     * 
     */
    private @Nullable String bucketBy;
    /**
     * @return List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000. You must specify either `variation` or `rollout_weights`.
     * 
     */
    private @Nullable List<Integer> rolloutWeights;
    /**
     * @return The integer variation index to serve if the rule clauses evaluate to `true`. You must specify either `variation` or `rollout_weights`.
     * 
     */
    private @Nullable Integer variation;

    private FeatureFlagEnvironmentFallthrough() {}
    /**
     * @return Group percentage rollout by a custom attribute. This argument is only valid if `rollout_weights` is also specified.
     * 
     */
    public Optional<String> bucketBy() {
        return Optional.ofNullable(this.bucketBy);
    }
    /**
     * @return List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000. You must specify either `variation` or `rollout_weights`.
     * 
     */
    public List<Integer> rolloutWeights() {
        return this.rolloutWeights == null ? List.of() : this.rolloutWeights;
    }
    /**
     * @return The integer variation index to serve if the rule clauses evaluate to `true`. You must specify either `variation` or `rollout_weights`.
     * 
     */
    public Optional<Integer> variation() {
        return Optional.ofNullable(this.variation);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureFlagEnvironmentFallthrough defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucketBy;
        private @Nullable List<Integer> rolloutWeights;
        private @Nullable Integer variation;
        public Builder() {}
        public Builder(FeatureFlagEnvironmentFallthrough defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketBy = defaults.bucketBy;
    	      this.rolloutWeights = defaults.rolloutWeights;
    	      this.variation = defaults.variation;
        }

        @CustomType.Setter
        public Builder bucketBy(@Nullable String bucketBy) {
            this.bucketBy = bucketBy;
            return this;
        }
        @CustomType.Setter
        public Builder rolloutWeights(@Nullable List<Integer> rolloutWeights) {
            this.rolloutWeights = rolloutWeights;
            return this;
        }
        public Builder rolloutWeights(Integer... rolloutWeights) {
            return rolloutWeights(List.of(rolloutWeights));
        }
        @CustomType.Setter
        public Builder variation(@Nullable Integer variation) {
            this.variation = variation;
            return this;
        }
        public FeatureFlagEnvironmentFallthrough build() {
            final var o = new FeatureFlagEnvironmentFallthrough();
            o.bucketBy = bucketBy;
            o.rolloutWeights = rolloutWeights;
            o.variation = variation;
            return o;
        }
    }
}
