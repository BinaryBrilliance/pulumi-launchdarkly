// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class FeatureFlagDefaults {
    /**
     * @return The index of the variation the flag will default to in all new environments when off.
     * 
     */
    private Integer offVariation;
    /**
     * @return The index of the variation the flag will default to in all new environments when on.
     * 
     */
    private Integer onVariation;

    private FeatureFlagDefaults() {}
    /**
     * @return The index of the variation the flag will default to in all new environments when off.
     * 
     */
    public Integer offVariation() {
        return this.offVariation;
    }
    /**
     * @return The index of the variation the flag will default to in all new environments when on.
     * 
     */
    public Integer onVariation() {
        return this.onVariation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureFlagDefaults defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer offVariation;
        private Integer onVariation;
        public Builder() {}
        public Builder(FeatureFlagDefaults defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.offVariation = defaults.offVariation;
    	      this.onVariation = defaults.onVariation;
        }

        @CustomType.Setter
        public Builder offVariation(Integer offVariation) {
            this.offVariation = Objects.requireNonNull(offVariation);
            return this;
        }
        @CustomType.Setter
        public Builder onVariation(Integer onVariation) {
            this.onVariation = Objects.requireNonNull(onVariation);
            return this;
        }
        public FeatureFlagDefaults build() {
            final var o = new FeatureFlagDefaults();
            o.offVariation = offVariation;
            o.onVariation = onVariation;
            return o;
        }
    }
}
