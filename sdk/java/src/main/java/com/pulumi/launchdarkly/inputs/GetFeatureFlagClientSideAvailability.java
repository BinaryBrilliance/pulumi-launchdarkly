// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFeatureFlagClientSideAvailability extends com.pulumi.resources.InvokeArgs {

    public static final GetFeatureFlagClientSideAvailability Empty = new GetFeatureFlagClientSideAvailability();

    /**
     * When set to true, this flag is available to SDKs using the client-side ID.
     * 
     */
    @Import(name="usingEnvironmentId", required=true)
    private Boolean usingEnvironmentId;

    /**
     * @return When set to true, this flag is available to SDKs using the client-side ID.
     * 
     */
    public Boolean usingEnvironmentId() {
        return this.usingEnvironmentId;
    }

    /**
     * When set to true, this flag is available to SDKs using a mobile key.
     * 
     */
    @Import(name="usingMobileKey")
    private @Nullable Boolean usingMobileKey;

    /**
     * @return When set to true, this flag is available to SDKs using a mobile key.
     * 
     */
    public Optional<Boolean> usingMobileKey() {
        return Optional.ofNullable(this.usingMobileKey);
    }

    private GetFeatureFlagClientSideAvailability() {}

    private GetFeatureFlagClientSideAvailability(GetFeatureFlagClientSideAvailability $) {
        this.usingEnvironmentId = $.usingEnvironmentId;
        this.usingMobileKey = $.usingMobileKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFeatureFlagClientSideAvailability defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFeatureFlagClientSideAvailability $;

        public Builder() {
            $ = new GetFeatureFlagClientSideAvailability();
        }

        public Builder(GetFeatureFlagClientSideAvailability defaults) {
            $ = new GetFeatureFlagClientSideAvailability(Objects.requireNonNull(defaults));
        }

        /**
         * @param usingEnvironmentId When set to true, this flag is available to SDKs using the client-side ID.
         * 
         * @return builder
         * 
         */
        public Builder usingEnvironmentId(Boolean usingEnvironmentId) {
            $.usingEnvironmentId = usingEnvironmentId;
            return this;
        }

        /**
         * @param usingMobileKey When set to true, this flag is available to SDKs using a mobile key.
         * 
         * @return builder
         * 
         */
        public Builder usingMobileKey(@Nullable Boolean usingMobileKey) {
            $.usingMobileKey = usingMobileKey;
            return this;
        }

        public GetFeatureFlagClientSideAvailability build() {
            $.usingEnvironmentId = Objects.requireNonNull($.usingEnvironmentId, "expected parameter 'usingEnvironmentId' to be non-null");
            return $;
        }
    }

}
