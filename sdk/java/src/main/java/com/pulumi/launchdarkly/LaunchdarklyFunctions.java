// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.launchdarkly.Utilities;
import com.pulumi.launchdarkly.inputs.GetEnvironmentArgs;
import com.pulumi.launchdarkly.inputs.GetEnvironmentPlainArgs;
import com.pulumi.launchdarkly.inputs.GetFeatureFlagArgs;
import com.pulumi.launchdarkly.inputs.GetFeatureFlagEnvironmentArgs;
import com.pulumi.launchdarkly.inputs.GetFeatureFlagEnvironmentPlainArgs;
import com.pulumi.launchdarkly.inputs.GetFeatureFlagPlainArgs;
import com.pulumi.launchdarkly.inputs.GetProjectArgs;
import com.pulumi.launchdarkly.inputs.GetProjectPlainArgs;
import com.pulumi.launchdarkly.inputs.GetSegmentArgs;
import com.pulumi.launchdarkly.inputs.GetSegmentPlainArgs;
import com.pulumi.launchdarkly.inputs.GetTeamMemberArgs;
import com.pulumi.launchdarkly.inputs.GetTeamMemberPlainArgs;
import com.pulumi.launchdarkly.inputs.GetWebhookArgs;
import com.pulumi.launchdarkly.inputs.GetWebhookPlainArgs;
import com.pulumi.launchdarkly.outputs.GetEnvironmentResult;
import com.pulumi.launchdarkly.outputs.GetFeatureFlagEnvironmentResult;
import com.pulumi.launchdarkly.outputs.GetFeatureFlagResult;
import com.pulumi.launchdarkly.outputs.GetProjectResult;
import com.pulumi.launchdarkly.outputs.GetSegmentResult;
import com.pulumi.launchdarkly.outputs.GetTeamMemberResult;
import com.pulumi.launchdarkly.outputs.GetWebhookResult;
import java.util.concurrent.CompletableFuture;

public final class LaunchdarklyFunctions {
    /**
     * Provides a LaunchDarkly environment data source.
     * 
     * This data source allows you to retrieve environment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .key(&#34;example-env&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args) {
        return getEnvironment(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly environment data source.
     * 
     * This data source allows you to retrieve environment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .key(&#34;example-env&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args) {
        return getEnvironmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly environment data source.
     * 
     * This data source allows you to retrieve environment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .key(&#34;example-env&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("launchdarkly:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly environment data source.
     * 
     * This data source allows you to retrieve environment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .key(&#34;example-env&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("launchdarkly:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly feature flag data source.
     * 
     * This data source allows you to retrieve feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlag(GetFeatureFlagArgs.builder()
     *             .key(&#34;example-flag&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFeatureFlagResult> getFeatureFlag(GetFeatureFlagArgs args) {
        return getFeatureFlag(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly feature flag data source.
     * 
     * This data source allows you to retrieve feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlag(GetFeatureFlagArgs.builder()
     *             .key(&#34;example-flag&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFeatureFlagResult> getFeatureFlagPlain(GetFeatureFlagPlainArgs args) {
        return getFeatureFlagPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly feature flag data source.
     * 
     * This data source allows you to retrieve feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlag(GetFeatureFlagArgs.builder()
     *             .key(&#34;example-flag&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFeatureFlagResult> getFeatureFlag(GetFeatureFlagArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("launchdarkly:index/getFeatureFlag:getFeatureFlag", TypeShape.of(GetFeatureFlagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly feature flag data source.
     * 
     * This data source allows you to retrieve feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlag(GetFeatureFlagArgs.builder()
     *             .key(&#34;example-flag&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFeatureFlagResult> getFeatureFlagPlain(GetFeatureFlagPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("launchdarkly:index/getFeatureFlag:getFeatureFlag", TypeShape.of(GetFeatureFlagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly environment-specific feature flag data source.
     * 
     * This data source allows you to retrieve environment-specific feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlagEnvironment(GetFeatureFlagEnvironmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .flagId(&#34;example-project/example-flag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFeatureFlagEnvironmentResult> getFeatureFlagEnvironment(GetFeatureFlagEnvironmentArgs args) {
        return getFeatureFlagEnvironment(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly environment-specific feature flag data source.
     * 
     * This data source allows you to retrieve environment-specific feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlagEnvironment(GetFeatureFlagEnvironmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .flagId(&#34;example-project/example-flag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFeatureFlagEnvironmentResult> getFeatureFlagEnvironmentPlain(GetFeatureFlagEnvironmentPlainArgs args) {
        return getFeatureFlagEnvironmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly environment-specific feature flag data source.
     * 
     * This data source allows you to retrieve environment-specific feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlagEnvironment(GetFeatureFlagEnvironmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .flagId(&#34;example-project/example-flag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFeatureFlagEnvironmentResult> getFeatureFlagEnvironment(GetFeatureFlagEnvironmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("launchdarkly:index/getFeatureFlagEnvironment:getFeatureFlagEnvironment", TypeShape.of(GetFeatureFlagEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly environment-specific feature flag data source.
     * 
     * This data source allows you to retrieve environment-specific feature flag information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetFeatureFlagEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getFeatureFlagEnvironment(GetFeatureFlagEnvironmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .flagId(&#34;example-project/example-flag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFeatureFlagEnvironmentResult> getFeatureFlagEnvironmentPlain(GetFeatureFlagEnvironmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("launchdarkly:index/getFeatureFlagEnvironment:getFeatureFlagEnvironment", TypeShape.of(GetFeatureFlagEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly project data source.
     * 
     * This data source allows you to retrieve project information from your LaunchDarkly organization.
     * 
     * &gt; **Note:** LaunchDarkly data sources do not provide access to the project&#39;s environments. If you wish to import environment configurations as data sources you must use the [`launchdarkly.Environment` data source](https://www.terraform.io/docs/providers/launchdarkly/d/environment.html).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getProject(GetProjectArgs.builder()
     *             .key(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args) {
        return getProject(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly project data source.
     * 
     * This data source allows you to retrieve project information from your LaunchDarkly organization.
     * 
     * &gt; **Note:** LaunchDarkly data sources do not provide access to the project&#39;s environments. If you wish to import environment configurations as data sources you must use the [`launchdarkly.Environment` data source](https://www.terraform.io/docs/providers/launchdarkly/d/environment.html).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getProject(GetProjectArgs.builder()
     *             .key(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args) {
        return getProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly project data source.
     * 
     * This data source allows you to retrieve project information from your LaunchDarkly organization.
     * 
     * &gt; **Note:** LaunchDarkly data sources do not provide access to the project&#39;s environments. If you wish to import environment configurations as data sources you must use the [`launchdarkly.Environment` data source](https://www.terraform.io/docs/providers/launchdarkly/d/environment.html).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getProject(GetProjectArgs.builder()
     *             .key(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("launchdarkly:index/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly project data source.
     * 
     * This data source allows you to retrieve project information from your LaunchDarkly organization.
     * 
     * &gt; **Note:** LaunchDarkly data sources do not provide access to the project&#39;s environments. If you wish to import environment configurations as data sources you must use the [`launchdarkly.Environment` data source](https://www.terraform.io/docs/providers/launchdarkly/d/environment.html).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getProject(GetProjectArgs.builder()
     *             .key(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("launchdarkly:index/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly segment data source.
     * 
     * This data source allows you to retrieve segment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetSegmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getSegment(GetSegmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .key(&#34;example-segment&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSegmentResult> getSegment(GetSegmentArgs args) {
        return getSegment(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly segment data source.
     * 
     * This data source allows you to retrieve segment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetSegmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getSegment(GetSegmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .key(&#34;example-segment&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSegmentResult> getSegmentPlain(GetSegmentPlainArgs args) {
        return getSegmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly segment data source.
     * 
     * This data source allows you to retrieve segment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetSegmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getSegment(GetSegmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .key(&#34;example-segment&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSegmentResult> getSegment(GetSegmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("launchdarkly:index/getSegment:getSegment", TypeShape.of(GetSegmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly segment data source.
     * 
     * This data source allows you to retrieve segment information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetSegmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getSegment(GetSegmentArgs.builder()
     *             .envKey(&#34;example-env&#34;)
     *             .key(&#34;example-segment&#34;)
     *             .projectKey(&#34;example-project&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSegmentResult> getSegmentPlain(GetSegmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("launchdarkly:index/getSegment:getSegment", TypeShape.of(GetSegmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly team member data source.
     * 
     * This data source allows you to retrieve team member information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetTeamMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getTeamMember(GetTeamMemberArgs.builder()
     *             .email(&#34;example@example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTeamMemberResult> getTeamMember(GetTeamMemberArgs args) {
        return getTeamMember(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly team member data source.
     * 
     * This data source allows you to retrieve team member information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetTeamMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getTeamMember(GetTeamMemberArgs.builder()
     *             .email(&#34;example@example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTeamMemberResult> getTeamMemberPlain(GetTeamMemberPlainArgs args) {
        return getTeamMemberPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly team member data source.
     * 
     * This data source allows you to retrieve team member information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetTeamMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getTeamMember(GetTeamMemberArgs.builder()
     *             .email(&#34;example@example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTeamMemberResult> getTeamMember(GetTeamMemberArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("launchdarkly:index/getTeamMember:getTeamMember", TypeShape.of(GetTeamMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly team member data source.
     * 
     * This data source allows you to retrieve team member information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetTeamMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getTeamMember(GetTeamMemberArgs.builder()
     *             .email(&#34;example@example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTeamMemberResult> getTeamMemberPlain(GetTeamMemberPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("launchdarkly:index/getTeamMember:getTeamMember", TypeShape.of(GetTeamMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly webhook data source.
     * 
     * This data source allows you to retrieve webhook information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getWebhook(GetWebhookArgs.builder()
     *             .id(&#34;57c0af6099690907435299&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWebhookResult> getWebhook(GetWebhookArgs args) {
        return getWebhook(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly webhook data source.
     * 
     * This data source allows you to retrieve webhook information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getWebhook(GetWebhookArgs.builder()
     *             .id(&#34;57c0af6099690907435299&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWebhookResult> getWebhookPlain(GetWebhookPlainArgs args) {
        return getWebhookPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a LaunchDarkly webhook data source.
     * 
     * This data source allows you to retrieve webhook information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getWebhook(GetWebhookArgs.builder()
     *             .id(&#34;57c0af6099690907435299&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWebhookResult> getWebhook(GetWebhookArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("launchdarkly:index/getWebhook:getWebhook", TypeShape.of(GetWebhookResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a LaunchDarkly webhook data source.
     * 
     * This data source allows you to retrieve webhook information from your LaunchDarkly organization.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.launchdarkly.LaunchdarklyFunctions;
     * import com.pulumi.launchdarkly.inputs.GetWebhookArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = LaunchdarklyFunctions.getWebhook(GetWebhookArgs.builder()
     *             .id(&#34;57c0af6099690907435299&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWebhookResult> getWebhookPlain(GetWebhookPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("launchdarkly:index/getWebhook:getWebhook", TypeShape.of(GetWebhookResult.class), args, Utilities.withVersion(options));
    }
}
