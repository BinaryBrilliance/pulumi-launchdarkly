// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.launchdarkly.outputs.GetTeamMembersTeamMember;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTeamMembersResult {
    private List<String> emails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean ignoreMissing;
    private List<GetTeamMembersTeamMember> teamMembers;

    private GetTeamMembersResult() {}
    public List<String> emails() {
        return this.emails;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> ignoreMissing() {
        return Optional.ofNullable(this.ignoreMissing);
    }
    public List<GetTeamMembersTeamMember> teamMembers() {
        return this.teamMembers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTeamMembersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> emails;
        private String id;
        private @Nullable Boolean ignoreMissing;
        private List<GetTeamMembersTeamMember> teamMembers;
        public Builder() {}
        public Builder(GetTeamMembersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emails = defaults.emails;
    	      this.id = defaults.id;
    	      this.ignoreMissing = defaults.ignoreMissing;
    	      this.teamMembers = defaults.teamMembers;
        }

        @CustomType.Setter
        public Builder emails(List<String> emails) {
            this.emails = Objects.requireNonNull(emails);
            return this;
        }
        public Builder emails(String... emails) {
            return emails(List.of(emails));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ignoreMissing(@Nullable Boolean ignoreMissing) {
            this.ignoreMissing = ignoreMissing;
            return this;
        }
        @CustomType.Setter
        public Builder teamMembers(List<GetTeamMembersTeamMember> teamMembers) {
            this.teamMembers = Objects.requireNonNull(teamMembers);
            return this;
        }
        public Builder teamMembers(GetTeamMembersTeamMember... teamMembers) {
            return teamMembers(List.of(teamMembers));
        }
        public GetTeamMembersResult build() {
            final var o = new GetTeamMembersResult();
            o.emails = emails;
            o.id = id;
            o.ignoreMissing = ignoreMissing;
            o.teamMembers = teamMembers;
            return o;
        }
    }
}
