// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFeatureFlagEnvironmentRuleClause {
    /**
     * @return The user attribute operated on.
     * 
     */
    private String attribute;
    /**
     * @return Whether the rule clause is negated.
     * 
     */
    private @Nullable Boolean negate;
    /**
     * @return The operator associated with the rule clause. This will be one of `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`.
     * 
     */
    private String op;
    /**
     * @return The type for each of the clause&#39;s values. Available types are `boolean`, `string`, and `number`.
     * 
     */
    private @Nullable String valueType;
    /**
     * @return The list of values associated with the rule clause.
     * 
     */
    private List<String> values;

    private GetFeatureFlagEnvironmentRuleClause() {}
    /**
     * @return The user attribute operated on.
     * 
     */
    public String attribute() {
        return this.attribute;
    }
    /**
     * @return Whether the rule clause is negated.
     * 
     */
    public Optional<Boolean> negate() {
        return Optional.ofNullable(this.negate);
    }
    /**
     * @return The operator associated with the rule clause. This will be one of `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`.
     * 
     */
    public String op() {
        return this.op;
    }
    /**
     * @return The type for each of the clause&#39;s values. Available types are `boolean`, `string`, and `number`.
     * 
     */
    public Optional<String> valueType() {
        return Optional.ofNullable(this.valueType);
    }
    /**
     * @return The list of values associated with the rule clause.
     * 
     */
    public List<String> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeatureFlagEnvironmentRuleClause defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attribute;
        private @Nullable Boolean negate;
        private String op;
        private @Nullable String valueType;
        private List<String> values;
        public Builder() {}
        public Builder(GetFeatureFlagEnvironmentRuleClause defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attribute = defaults.attribute;
    	      this.negate = defaults.negate;
    	      this.op = defaults.op;
    	      this.valueType = defaults.valueType;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder attribute(String attribute) {
            this.attribute = Objects.requireNonNull(attribute);
            return this;
        }
        @CustomType.Setter
        public Builder negate(@Nullable Boolean negate) {
            this.negate = negate;
            return this;
        }
        @CustomType.Setter
        public Builder op(String op) {
            this.op = Objects.requireNonNull(op);
            return this;
        }
        @CustomType.Setter
        public Builder valueType(@Nullable String valueType) {
            this.valueType = valueType;
            return this;
        }
        @CustomType.Setter
        public Builder values(List<String> values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public GetFeatureFlagEnvironmentRuleClause build() {
            final var o = new GetFeatureFlagEnvironmentRuleClause();
            o.attribute = attribute;
            o.negate = negate;
            o.op = op;
            o.valueType = valueType;
            o.values = values;
            return o;
        }
    }
}
