// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamMemberState extends com.pulumi.resources.ResourceArgs {

    public static final TeamMemberState Empty = new TeamMemberState();

    /**
     * The list of custom roles keys associated with the team member. Custom roles are only available to customers on enterprise plans. To learn more about enterprise plans, contact sales@launchdarkly.com.
     * 
     */
    @Import(name="customRoles")
    private @Nullable Output<List<String>> customRoles;

    /**
     * @return The list of custom roles keys associated with the team member. Custom roles are only available to customers on enterprise plans. To learn more about enterprise plans, contact sales@launchdarkly.com.
     * 
     */
    public Optional<Output<List<String>>> customRoles() {
        return Optional.ofNullable(this.customRoles);
    }

    /**
     * The unique email address associated with the team member.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return The unique email address associated with the team member.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The team member&#39;s given name. Please note that, once created, this cannot be updated except by the team member themself.
     * 
     */
    @Import(name="firstName")
    private @Nullable Output<String> firstName;

    /**
     * @return The team member&#39;s given name. Please note that, once created, this cannot be updated except by the team member themself.
     * 
     */
    public Optional<Output<String>> firstName() {
        return Optional.ofNullable(this.firstName);
    }

    /**
     * The team member&#39;s family name. Please note that, once created, this cannot be updated except by the team member themself.
     * 
     */
    @Import(name="lastName")
    private @Nullable Output<String> lastName;

    /**
     * @return The team member&#39;s family name. Please note that, once created, this cannot be updated except by the team member themself.
     * 
     */
    public Optional<Output<String>> lastName() {
        return Optional.ofNullable(this.lastName);
    }

    /**
     * The role associated with team member. Supported roles are `reader`, `writer`, or `admin`. If you don&#39;t specify a role, `reader` is assigned by default.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The role associated with team member. Supported roles are `reader`, `writer`, or `admin`. If you don&#39;t specify a role, `reader` is assigned by default.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private TeamMemberState() {}

    private TeamMemberState(TeamMemberState $) {
        this.customRoles = $.customRoles;
        this.email = $.email;
        this.firstName = $.firstName;
        this.lastName = $.lastName;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamMemberState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamMemberState $;

        public Builder() {
            $ = new TeamMemberState();
        }

        public Builder(TeamMemberState defaults) {
            $ = new TeamMemberState(Objects.requireNonNull(defaults));
        }

        /**
         * @param customRoles The list of custom roles keys associated with the team member. Custom roles are only available to customers on enterprise plans. To learn more about enterprise plans, contact sales@launchdarkly.com.
         * 
         * @return builder
         * 
         */
        public Builder customRoles(@Nullable Output<List<String>> customRoles) {
            $.customRoles = customRoles;
            return this;
        }

        /**
         * @param customRoles The list of custom roles keys associated with the team member. Custom roles are only available to customers on enterprise plans. To learn more about enterprise plans, contact sales@launchdarkly.com.
         * 
         * @return builder
         * 
         */
        public Builder customRoles(List<String> customRoles) {
            return customRoles(Output.of(customRoles));
        }

        /**
         * @param customRoles The list of custom roles keys associated with the team member. Custom roles are only available to customers on enterprise plans. To learn more about enterprise plans, contact sales@launchdarkly.com.
         * 
         * @return builder
         * 
         */
        public Builder customRoles(String... customRoles) {
            return customRoles(List.of(customRoles));
        }

        /**
         * @param email The unique email address associated with the team member.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The unique email address associated with the team member.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param firstName The team member&#39;s given name. Please note that, once created, this cannot be updated except by the team member themself.
         * 
         * @return builder
         * 
         */
        public Builder firstName(@Nullable Output<String> firstName) {
            $.firstName = firstName;
            return this;
        }

        /**
         * @param firstName The team member&#39;s given name. Please note that, once created, this cannot be updated except by the team member themself.
         * 
         * @return builder
         * 
         */
        public Builder firstName(String firstName) {
            return firstName(Output.of(firstName));
        }

        /**
         * @param lastName The team member&#39;s family name. Please note that, once created, this cannot be updated except by the team member themself.
         * 
         * @return builder
         * 
         */
        public Builder lastName(@Nullable Output<String> lastName) {
            $.lastName = lastName;
            return this;
        }

        /**
         * @param lastName The team member&#39;s family name. Please note that, once created, this cannot be updated except by the team member themself.
         * 
         * @return builder
         * 
         */
        public Builder lastName(String lastName) {
            return lastName(Output.of(lastName));
        }

        /**
         * @param role The role associated with team member. Supported roles are `reader`, `writer`, or `admin`. If you don&#39;t specify a role, `reader` is assigned by default.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role associated with team member. Supported roles are `reader`, `writer`, or `admin`. If you don&#39;t specify a role, `reader` is assigned by default.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public TeamMemberState build() {
            return $;
        }
    }

}
