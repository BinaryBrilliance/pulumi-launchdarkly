// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.launchdarkly.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricUrl {
    /**
     * @return The URL type. Available choices are `exact`, `canonical`, `substring` and `regex`.
     * 
     */
    private String kind;
    /**
     * @return The regex pattern to match by.
     * 
     */
    private @Nullable String pattern;
    /**
     * @return The URL substring to match by.
     * 
     */
    private @Nullable String substring;
    /**
     * @return The exact or canonical URL.
     * 
     */
    private @Nullable String url;

    private MetricUrl() {}
    /**
     * @return The URL type. Available choices are `exact`, `canonical`, `substring` and `regex`.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The regex pattern to match by.
     * 
     */
    public Optional<String> pattern() {
        return Optional.ofNullable(this.pattern);
    }
    /**
     * @return The URL substring to match by.
     * 
     */
    public Optional<String> substring() {
        return Optional.ofNullable(this.substring);
    }
    /**
     * @return The exact or canonical URL.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricUrl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String kind;
        private @Nullable String pattern;
        private @Nullable String substring;
        private @Nullable String url;
        public Builder() {}
        public Builder(MetricUrl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kind = defaults.kind;
    	      this.pattern = defaults.pattern;
    	      this.substring = defaults.substring;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder pattern(@Nullable String pattern) {
            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder substring(@Nullable String substring) {
            this.substring = substring;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public MetricUrl build() {
            final var o = new MetricUrl();
            o.kind = kind;
            o.pattern = pattern;
            o.substring = substring;
            o.url = url;
            return o;
        }
    }
}
